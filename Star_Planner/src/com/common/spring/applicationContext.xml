<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<context:component-scan base-package="bookstore.dao,bookstore.service"/>
	
	<bean name="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		p:driverClassName = "oracle.jdbc.driver.OracleDriver"
		p:url="jdbc:oracle:thin:@127.0.0.1:1521:XE"
		p:username="scott"
		p:password="tiger"
		p:maxTotal="100"/>
		
	<bean name="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource"
		p:configLocation="common/config/mybatis/mybatis-config.xml"/>
	<!-- 
	<bean name="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate"
		c:sqlSessionFactory-ref="sqlSessionFactory"/>
	
		Transaction 관련 설정
		- spring-tx 라이브러리(api) 필요 : spring-jdbc의 의존 라이브러리
		1. tx 네임스페이스 추가
		2. transcationManager를 bean으로 등록(mybatis,jdbc 사용시 - DataSourceTransactionManager)
			-> dao에서 사용하는 connection을 만들어주는 dataSource를 setter를 통해 주입
				-> DB작업 connection과 트랜잭션 처리시 사용할 Connection을 통일하기 위해
				-> SQLSessinFactoryBean과 DataSourceTransactionManager에 주입하는 dataSource를 통일한다.
		3. <tx:annotation-driven> 태그추가. - transaction manager를 등록
			- annotation-driven태그 : Annotation 기반 설정을 할때 필요한 bean들을 자동으로 등록
		
	 -->
	<bean name="txmanagr" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource"/>	
	<tx:annotation-driven transaction-manager="txmanager"/>


</beans>
